// <auto-generated />
using System;
using FinanceControl.UI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceControl.UI.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250219130049_InitialMigrations")]
    partial class InitialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceControl.UI.Domain.Entities.ContasAPagar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp")
                        .HasColumnName("data_vencimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<bool>("Pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("pago");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_contas_a_pagar");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("ix_contas_a_pagar_usuario_id");

                    b.ToTable("contas_a_pagar", (string)null);
                });

            modelBuilder.Entity("FinanceControl.UI.Domain.Entities.ContasAReceber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp")
                        .HasColumnName("data_vencimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<bool>("Recebido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("recebido");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("pk_contas_a_receber");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("ix_contas_a_receber_usuario_id");

                    b.ToTable("contas_a_receber", (string)null);
                });

            modelBuilder.Entity("FinanceControl.UI.Domain.Entities.ContasFinanceiras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<decimal>("LimiteCredito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("limite_credito");

                    b.Property<string>("NomeInstituicaoFinanceira")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome_instituicao_financeira");

                    b.Property<decimal>("Saldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("saldo");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id")
                        .HasName("pk_contas_financeiras");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("ix_contas_financeiras_usuario_id");

                    b.ToTable("contas_financeiras", (string)null);
                });

            modelBuilder.Entity("FinanceControl.UI.Domain.Entities.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_usuarios");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_usuarios_email");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("FinanceControl.UI.Domain.Entities.ContasAPagar", b =>
                {
                    b.HasOne("FinanceControl.UI.Domain.Entities.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_contas_a_pagar_usuarios");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceControl.UI.Domain.Entities.ContasAReceber", b =>
                {
                    b.HasOne("FinanceControl.UI.Domain.Entities.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_contas_a_receber_usuarios");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceControl.UI.Domain.Entities.ContasFinanceiras", b =>
                {
                    b.HasOne("FinanceControl.UI.Domain.Entities.Usuarios", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_contas_financeiras_usuarios");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
